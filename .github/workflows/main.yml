# name: github_action_to_ec2
# on:
#   workflow_dispatch:

#   push:
#     branches: [ "dev" ]

#   pull_request:
#     branches: [ "main" ]

# jobs:
#   dev:
#     runs-on: ubuntu-latest
#     env:
#       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  
#       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  
#       AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN_KEY }}
#       AWS_DEFAULT_REGION: us-east-1

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Upload to S3
#         run: |
#           aws s3 sync ansible s3://test-intern-github-action-ujwal/ --delete

#       - name: Setting up terraform
#         uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_version: 1.8
        
#       - name: Terraform Init
#         run: |
#           cd terraform
#           terraform init

#       - name: Terraform plan
#         run: |
#           cd terraform
#           terraform plan -var-file=dev.tfvars

#       - name: Terraform apply
#         run: |
#           cd terraform
#           terraform apply -var-file=dev.tfvars -auto-approve

#       - name: Install AWS CLI
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y awscli



name: github_action_to_ec2
on:
  workflow_dispatch:
  push:
    branches: [ "dev" ]

jobs:
  dev:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      AWS_DEFAULT_REGION: us-east-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setting up terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform plan
        run: |
          cd terraform
          terraform plan -var-file=dev.tfvars

      - name: Terraform apply
        run: |
          cd terraform
          terraform apply -var-file=dev.tfvars -auto-approve

      - name: Save instance ID to file
        run: |
          cd terraform
          terraform output -raw instance_id > instance.txt

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Upload to S3
        run: |
          aws s3 sync ansible s3://amazon-linux-ansible-code-ujwal --delete

      - name: Update EC2 User Data
        run: |
          INSTANCE_ID=$(cat terraform/instance.txt)  
          USER_DATA_SCRIPT=$(cat terraform/script/automate.sh)  
          echo "$USER_DATA_SCRIPT" > user_data.sh  
          aws ec2 modify-instance-attribute --instance-id $INSTANCE_ID --user-data file://user_data.sh